-- Spy Chat con Burbujas - Versión Final (acepta prefijos antes de "sit", notificaciones en inglés)
local TextChatService = game:GetService("TextChatService")
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")

local pendingSitChecks = {}
local cooldown = {}

-- Show bubble over player's head
local function showChatBubble(player, message)
    if not player or not player.Character then return end
    wait(0.1)
    local head = player.Character:FindFirstChild("Head")
    if not head then return end

    local oldBubble = head:FindFirstChild("ChatBubble")
    if oldBubble then oldBubble:Destroy() end

    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Name = "ChatBubble"
    billboardGui.Adornee = head
    billboardGui.Size = UDim2.new(0, 200, 0, 60)
    billboardGui.StudsOffset = Vector3.new(0, 2.5, 0)
    billboardGui.AlwaysOnTop = true
    billboardGui.MaxDistance = 100
    billboardGui.Parent = head

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.BackgroundTransparency = 0.3
    textLabel.BorderSizePixel = 0
    textLabel.TextColor3 = Color3.fromRGB(100, 200, 255)
    textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.TextStrokeTransparency = 0
    textLabel.Font = Enum.Font.GothamBold
    textLabel.TextSize = 14
    textLabel.Text = message
    textLabel.TextWrapped = true
    textLabel.Parent = billboardGui

    delay(5, function()
        if billboardGui and billboardGui.Parent then
            billboardGui:Destroy()
        end
    end)
end

-- Auto-sit alert (English)
local function showAutoSitAlert(playerName, displayName)
    StarterGui:SetCore("SendNotification", {
        Title = "AUTO-SIT DETECTED",
        Text = displayName .. " may be using auto-sit",
        Icon = "rbxassetid://4458911881",
        Duration = 5
    })

    StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = displayName .. " (@" .. playerName .. ") - AUTO-SIT DETECTED",
        Color = Color3.fromRGB(255, 50, 50),
        Font = Enum.Font.GothamBold,
        TextSize = 16
    })
end

-- New detection: accept commands that END with the target (allows any prefix)
local function isSitCommand(rawMessage)
    if not rawMessage or rawMessage == "" then return false end

    -- Remove leading non-alphanumeric characters (so "/1sit" -> "1sit")
    local cleaned = rawMessage:gsub("^%W+", "")
    -- Take first word only (in case they type "/1sit extra")
    cleaned = cleaned:match("^[%w_]+") or ""
    cleaned = string.lower(cleaned)

    if cleaned == "" then return false end

    local targets = {"sit", "sentar", "sentarse"}

    for _, target in ipairs(targets) do
        -- exact match
        if cleaned == target then
            return true
        end
        -- accept if the cleaned word ENDS with the target (any prefix allowed)
        if #cleaned >= #target then
            if cleaned:sub(-#target) == target then
                return true
            end
        end
    end

    return false
end

-- Setup detection per player (no prints)
local function setupPlayerDetection(player)
    local humanoid = nil
    local connection = nil

    local function onCharacterAdded(character)
        if connection then
            connection:Disconnect()
            connection = nil
        end

        wait(1)
        humanoid = character:FindFirstChildOfClass("Humanoid")
        if not humanoid then return end

        connection = humanoid:GetPropertyChangedSignal("Sit"):Connect(function()
            if humanoid.Sit then
                if cooldown[player] then return end

                pendingSitChecks[player] = true

                delay(2, function()
                    if pendingSitChecks[player] then
                        cooldown[player] = true
                        delay(10, function()
                            cooldown[player] = nil
                        end)

                        local displayName = player.DisplayName ~= player.Name and player.DisplayName or player.Name
                        showAutoSitAlert(player.Name, displayName)
                    end
                    pendingSitChecks[player] = nil
                end)
            end
        end)
    end

    if player.Character then
        onCharacterAdded(player.Character)
    end

    player.CharacterAdded:Connect(onCharacterAdded)
end

-- Handle when a player chats
local function onPlayerChatted(player, message)
    if not message then return end

    -- Consider messages that start with a non-alphanumeric (command-like) or are directly a word
    if message:match("^%W") or message:match("^[%w_]") then
        showChatBubble(player, message)

        if isSitCommand(message) then
            if pendingSitChecks[player] then
                pendingSitChecks[player] = nil
            end
        end
    end
end

-- Monitor TextChatService
TextChatService.OnIncomingMessage = function(message)
    local text = message.Text or ""
    local source = message.TextSource
    local player = nil
    if source and source.UserId then
        player = Players:GetPlayerByUserId(source.UserId)
    end

    if text ~= "" then
        if player and isSitCommand(text) then
            if pendingSitChecks[player] then
                pendingSitChecks[player] = nil
            end
        end

        local props = Instance.new("TextChatMessageProperties")
        props.Text = text
        return props
    end
end

-- Configure for existing players
for _, player in pairs(Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        onPlayerChatted(player, message)
    end)
    setupPlayerDetection(player)
end

Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        onPlayerChatted(player, message)
    end)
    setupPlayerDetection(player)
end)

-- Ready message (chat system)
StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "Spy enabled - improved auto-sit detector (English notifications)",
    Color = Color3.fromRGB(100, 200, 255)
})
